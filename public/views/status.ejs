<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Controle Patrimonial - Status</title>
    <link rel="stylesheet" href="/status.css">
</head>
<body>
    <section class="logo" style="text-align: center;">
        <img src="/logo.png" alt="" />
    </section>
    <h2 style="text-align: center; font-size: 14px; color: white; font-family: tahoma;">Verificação de patrimônio</h2>

    <section class="wrapper">
        <!-- Form for the Scanning --> 
        <div class="qr_area">
            <input type="text" name="result" id="result" placeholder="Qrcode number" maxlength="18" required />
            <button type="button" onclick="verifyQR();"><img src="/varredura.png" alt="" width="17px" height="17px"></button>
        </div>

        <!-- Dados que vão ser puxados da api -->
        <div class="status">
            <span id="n-content">Nome: </span>
            <span id="l-content">Localização: </span>
            <span id="int-content">Loc Interna: </span>
            <span id="c-content">Codigo: </span>
            <span id="s-content">Departamento: </span><br><br>
            <span id="u-content">Em Uso: <img src="/wrong.png" alt="" width="20px" style="position: absolute; margin-left: 6px;"></span>
        </div>

        <!-- Voltar -->
        <button type="button" class="go-back" onclick="window.location.href='/'">Voltar</button>
    </section>

    <div class="window-background" id="background"></div>
    <div class="draggable-window" id="window-qr">
        <div class="window-header" id="wind_header">
            <span>Leitor de QR</span>
            <button type="button" onclick="closeWindow(1);" class="close" title="Fechar">X</button>
        </div>
        <div class="window-content">
            <div id="reader" style="
                background-color: rgba(255, 255, 255, 0.445); 
                backdrop-filter: blur(3px);
                border-radius: 1rem;" 
            width="500px"></div>
        </div>
    </div>

    <!-- Library -->
    <script src="https://unpkg.com/html5-qrcode@2.3.8/html5-qrcode.min.js"></script>
    <script src="/api-calls.js"></script>
    <script>
        // Identifica se o DOM esta carregado.
        function domReady(fn)
        {
            (document.readyState === "complete" || document.readyState === "interactive") ?
            setTimeout(fn, 1) : document.addEventListener("DOMContentLoaded", fn);
        }

        //  Variavel para guardar a camera
        let camera;

        // Função para inicar o leitor de qr
        function verifyQR()
        {
            // Campo onde esta o numero do qr para verificação interna
            if (document.getElementById('result').value !== "")
            {
                // OAUTH 2.0 - Basic -> Puxando os dados digitados manualmente.
                const opt_auth = {
                    method: 'GET',
                    headers: { 'Content-Type': 'application/json', },
                    /*body: JSON.stringify({
                        qr: document.getElementById('result').value
                    })*/
                };
                fetch(`/restapi_v1/auth/token`, opt_auth).then((response) => response.json())
                    .then(data => { retrieveInternalAssetInfo(data.access_token, document.getElementById("result").value); }).catch((error) => alert(error))
            }
            else
            {
                // Abre janela
                let logPopup = document.getElementById('window-qr');
                logPopup.style.animation="openAnimation 0.2s";
                let backPopup = document.getElementById('background');
                backPopup.style.animation="openBackground 0.2s";
                
                // Parar animação e executar os elementos apos abrir a janela
                delay (150).then (() => { 
                    logPopup.style.display="block";
                    logPopup.style.opacity= "1";
                    backPopup.style.display="block";
                    backPopup.style.opacity= "0.5";

                    // Leitor
                    domReady(() => {
                        var qr = document.getElementById("result");
                        var lastResult, countResults = 0;

                        // Caso tenha um qr valido
                        function onScanSuccess(decodeText, decodeResult)
                        {
                            if(decodeText !== lastResult)
                            {
                                ++countResults;
                                lastResult = decodeText;

                                // Coloca o resultado da busca 
                                qr.value = decodeText; 
                                scanner.clear();

                                // OAUTH 2.0 - Basic -> Puxando os dados pegos pelo qr.
                                const opt_auth = {
                                    method: 'GET',
                                    headers: { 'Content-Type': 'application/json', },
                                };
                                fetch(`/restapi_v1/auth/token`, opt_auth).then((response) => response.json())
                                    .then(data => { retrieveInternalAssetInfo(data.access_token, qr.value); closeWindow(1); }).catch((error) => alert(error))
                            }
                        }

                        // Render camera
                        let scanner = new Html5QrcodeScanner('reader', { fps:30, qrbox:150 });
                        camera = scanner;// Guarda a camera.
                        scanner.render(onScanSuccess);
                    });
                });
            }
        }

        // Handler para fechar janelas
        function closeWindow(_id)
        {
            switch(_id)
            {
                case 1:
                {
                    // Mata o scanner de qr para nao usar nenhum processo a mais do celular.
                    camera.clear();

                    // Close login window.
                    let logPopup = document.getElementById('window-qr');
                    logPopup.style.animation="closeAnimation 0.2s";
                    let backPopup = document.getElementById('background');
                    backPopup.style.animation="closeBackground 0.2s";
                    
                    // After the popup is closed, remove the element from the DOM.
                    delay (150).then (() => { logPopup.style.display = "none"; backPopup.style.display = "none"; });
                    break;
                }
            }
        }

        // Delay system
        function delay(time) { return new Promise(resolve => setTimeout (resolve, time)); }
    </script>
</body>
</html>